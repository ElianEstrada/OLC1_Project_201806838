
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initlefttk_orlefttk_andrighttk_unotlefttk_equalstk_differenttk_greatertk_greater_equalstk_lesstk_less_equalslefttk_addtk_sublefttk_multtk_divtk_modulelefttk_powrighttk_uminusrighttk_fcastlefttk_inctk_decres_boolean res_break res_case res_char res_continue res_default res_double res_else res_false res_for res_func res_if res_int res_main res_new res_null res_print res_read res_return res_string res_switch res_true res_var res_while tk_add tk_and tk_assig tk_brackets_c tk_brackets_o tk_char tk_comma tk_dec tk_decimal tk_different tk_div tk_dotcomma tk_equals tk_greater tk_greater_equals tk_id tk_inc tk_int tk_key_c tk_key_o tk_less tk_less_equals tk_module tk_mult tk_not tk_or tk_par_c tk_par_o tk_pow tk_string tk_sub tk_twodotinit : instructionsinstructions : instructions instructioninstructions : instructioninstruction : statement ptcommaP\n                   | assignment ptcommaP \n                   | statement_array ptcommaP\n                   | assignment_array ptcommaP\n                   | print ptcommaP\n                   | inc_dec ptcommaP\n                   | conditional\n                   | loops\n                   | transfer ptcommaP\n                   | functions\n                   | call_function ptcommaPinstruction : error tk_dotcommastatement : res_var tk_id statementPstatementP : tk_assig expression\n                  | emptystatement_array : type list_brackets tk_id tk_assig res_new type list_expressionstatement_array : type list_brackets tk_id tk_assig values_arraylist_brackets : list_brackets bracketslist_brackets : bracketsbrackets : tk_brackets_o tk_brackets_clist_expression : list_expression expression_bralist_expression : expression_braexpression_bra : tk_brackets_o expression tk_brackets_cvalues_array : tk_key_o list_values_array tk_key_clist_values_array : list_values_array tk_comma valueslist_values_array : valuesvalues : values_array\n              | expressionassignment : tk_id tk_assig expressionassignment_array : tk_id list_expression tk_assig expressionfunctions : function_mainfunction_main : res_main tk_par_o tk_par_c tk_key_o instructions tk_key_cfunctions : res_func tk_id tk_par_o tk_par_c tk_key_o instructions tk_key_cfunctions : res_func tk_id tk_par_o list_params tk_par_c tk_key_o instructions tk_key_clist_params : list_params tk_comma paramslist_params : paramsparams : type tk_idcall_function : tk_id tk_par_o tk_par_ccall_function : tk_id tk_par_o list_params_call tk_par_clist_params_call : list_params_call tk_comma params_calllist_params_call : params_callparams_call : expressionprint : res_print tk_par_o expression tk_par_cinc_dec : tk_id tk_inc\n               | tk_id tk_decconditional : con_if\n                   | con_switchcon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_ccon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else tk_key_o instructions tk_key_ccon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else con_ifcon_switch : res_switch tk_par_o expression tk_par_c tk_key_o default tk_key_ccon_switch : res_switch tk_par_o expression tk_par_c tk_key_o list_case tk_key_ccon_switch : res_switch tk_par_o expression tk_par_c tk_key_o list_case default tk_key_clist_case : list_case caselist_case : casecase : res_case expression tk_twodot instructionsdefault : res_default tk_twodot instructionsloops : loop_while\n             | loop_forloop_while : res_while tk_par_o expression tk_par_c tk_key_o instructions tk_key_cloop_for : res_for tk_par_o for_init tk_dotcomma expression tk_dotcomma for_advance tk_par_c tk_key_o instructions tk_key_cfor_init : statement\n                | assignmentfor_advance : inc_dec\n                   | assignmenttransfer : res_breaktransfer : res_continuetransfer : res_return expressiontype : res_int\n            | res_char\n            | res_string\n            | res_double\n            | res_booleanptcommaP : tk_dotcomma\n                | emptyexpression : tk_par_o expression tk_par_cexpression : expression tk_add expression\n                  | expression tk_sub expression\n                  | expression tk_mult expression\n                  | expression tk_div expression\n                  | expression tk_module expression\n                  | expression tk_pow expression\n                  | expression tk_equals expression\n                  | expression tk_different expression\n                  | expression tk_greater expression\n                  | expression tk_greater_equals expression\n                  | expression tk_less expression\n                  | expression tk_less_equals expression\n                  | expression tk_and expression\n                  | expression tk_or expressionexpression : tk_sub expression %prec tk_uminus\n                  | tk_not expression %prec tk_unotexpression : expression tk_inc\n                  | expression tk_decexpression : tk_par_o type tk_par_c expression %prec tk_fcastexpression : call_functionexpression : res_read tk_par_o tk_par_c\n    expression :  tk_int\n    expression : tk_decimalexpression : tk_stringexpression : tk_charexpression : res_true\n                  | res_falseexpression : tk_idexpression : tk_id list_expressionexpression : res_nullempty : '
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[15,15,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,15,-20,-98,15,15,15,15,15,15,15,15,-35,-19,-27,-36,15,-51,-54,-55,15,-63,-37,-56,15,15,15,-53,15,15,15,15,-52,-64,]),'res_var':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,81,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[16,16,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,16,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,16,-20,-98,16,16,16,16,16,16,16,16,-35,-19,-27,-36,16,-51,-54,-55,16,-63,-37,-56,16,16,16,-53,16,16,16,16,-52,-64,]),'tk_id':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,81,83,84,85,86,87,88,89,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,119,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,160,161,164,165,166,167,171,173,175,181,182,184,189,190,191,192,193,194,195,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[17,17,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,51,-49,-50,-61,-62,-69,-70,75,-34,77,-72,-73,-74,-75,-76,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,75,-47,-48,75,-25,75,94,-22,75,-71,75,75,75,-99,-101,-102,-103,-104,-105,-106,-107,-109,75,75,75,127,-16,75,-18,-32,75,-24,-41,-21,-23,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-96,-97,-94,-95,-108,-17,-33,-42,75,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,75,-100,170,75,17,-20,75,-98,17,17,17,17,17,17,17,75,17,209,-35,-19,-27,75,-36,17,-51,-54,-55,17,-63,-37,-56,17,17,17,-53,17,17,17,17,-52,-64,]),'res_print':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[19,19,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,19,-20,-98,19,19,19,19,19,19,19,19,-35,-19,-27,-36,19,-51,-54,-55,19,-63,-37,-56,19,19,19,-53,19,19,19,19,-52,-64,]),'res_break':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[24,24,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,24,-20,-98,24,24,24,24,24,24,24,24,-35,-19,-27,-36,24,-51,-54,-55,24,-63,-37,-56,24,24,24,-53,24,24,24,24,-52,-64,]),'res_continue':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[25,25,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,25,-20,-98,25,25,25,25,25,25,25,25,-35,-19,-27,-36,25,-51,-54,-55,25,-63,-37,-56,25,25,25,-53,25,25,25,25,-52,-64,]),'res_return':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[26,26,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,26,-20,-98,26,26,26,26,26,26,26,26,-35,-19,-27,-36,26,-51,-54,-55,26,-63,-37,-56,26,26,26,-53,26,26,26,26,-52,-64,]),'res_func':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[28,28,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,28,-20,-98,28,28,28,28,28,28,28,28,-35,-19,-27,-36,28,-51,-54,-55,28,-63,-37,-56,28,28,28,-53,28,28,28,28,-52,-64,]),'res_int':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,166,167,169,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[29,29,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,29,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,29,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,29,29,-20,-98,29,29,29,29,29,29,29,29,29,-35,-19,-27,-36,29,-51,-54,-55,29,-63,-37,-56,29,29,29,-53,29,29,29,29,-52,-64,]),'res_char':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,166,167,169,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[30,30,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,30,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,30,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,30,30,-20,-98,30,30,30,30,30,30,30,30,30,-35,-19,-27,-36,30,-51,-54,-55,30,-63,-37,-56,30,30,30,-53,30,30,30,30,-52,-64,]),'res_string':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,166,167,169,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[31,31,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,31,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,31,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,31,31,-20,-98,31,31,31,31,31,31,31,31,31,-35,-19,-27,-36,31,-51,-54,-55,31,-63,-37,-56,31,31,31,-53,31,31,31,31,-52,-64,]),'res_double':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,166,167,169,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[32,32,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,32,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,32,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,32,32,-20,-98,32,32,32,32,32,32,32,32,32,-35,-19,-27,-36,32,-51,-54,-55,32,-63,-37,-56,32,32,32,-53,32,32,32,32,-52,-64,]),'res_boolean':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,166,167,169,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[33,33,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,33,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,33,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,33,33,-20,-98,33,33,33,33,33,33,33,33,33,-35,-19,-27,-36,33,-51,-54,-55,33,-63,-37,-56,33,33,33,-53,33,33,33,33,-52,-64,]),'res_if':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,212,213,214,215,217,218,219,220,221,222,223,224,],[34,34,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,34,-20,-98,34,34,34,34,34,34,34,34,-35,-19,-27,-36,34,-51,-54,-55,34,-63,-37,34,-56,34,34,34,-53,34,34,34,34,-52,-64,]),'res_switch':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[35,35,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,35,-20,-98,35,35,35,35,35,35,35,35,-35,-19,-27,-36,35,-51,-54,-55,35,-63,-37,-56,35,35,35,-53,35,35,35,35,-52,-64,]),'res_while':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[36,36,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,36,-20,-98,36,36,36,36,36,36,36,36,-35,-19,-27,-36,36,-51,-54,-55,36,-63,-37,-56,36,36,36,-53,36,36,36,36,-52,-64,]),'res_for':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[37,37,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,37,-20,-98,37,37,37,37,37,37,37,37,-35,-19,-27,-36,37,-51,-54,-55,37,-63,-37,-56,37,37,37,-53,37,37,37,37,-52,-64,]),'res_main':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,166,167,171,173,175,181,182,184,190,192,193,194,196,197,198,199,200,203,205,211,213,214,215,217,218,219,220,221,222,223,224,],[38,38,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,38,-20,-98,38,38,38,38,38,38,38,38,-35,-19,-27,-36,38,-51,-54,-55,38,-63,-37,-56,38,38,38,-53,38,38,38,38,-52,-64,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,166,192,193,194,196,198,199,200,205,211,213,218,223,224,],[0,-1,-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-20,-98,-35,-19,-27,-36,-51,-54,-55,-63,-37,-56,-53,-52,-64,]),'tk_key_c':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,166,175,177,178,179,180,181,184,185,186,188,190,192,193,194,196,197,198,199,200,201,202,205,210,211,213,214,218,219,221,222,223,224,],[-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-20,-98,192,194,-29,-30,-31,196,198,199,200,-58,205,-35,-19,-27,-36,211,-51,-54,-55,213,-57,-63,-28,-37,-56,-60,-53,-59,223,224,-52,-64,]),'res_default':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,166,172,186,188,192,193,194,196,198,199,200,202,205,211,213,218,219,223,224,],[-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-20,-98,187,187,-58,-35,-19,-27,-36,-51,-54,-55,-57,-63,-37,-56,-53,-59,-52,-64,]),'res_case':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,166,172,186,188,192,193,194,196,198,199,200,202,205,211,213,218,219,223,224,],[-3,-110,-110,-110,-110,-110,-110,-10,-11,-110,-13,-110,-49,-50,-61,-62,-69,-70,-34,-2,-4,-77,-78,-5,-6,-7,-8,-9,-12,-14,-15,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-20,-98,189,189,-58,-35,-19,-27,-36,-51,-54,-55,-57,-63,-37,-56,-53,-59,-52,-64,]),'tk_dotcomma':([4,5,6,7,8,9,12,14,15,24,25,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,124,125,126,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,166,174,193,194,],[41,41,41,41,41,41,41,41,50,-69,-70,-110,-47,-48,-25,-71,-99,-101,-102,-103,-104,-105,-106,-107,-109,-16,-18,-32,-24,-41,-96,-97,-94,-95,-108,160,-65,-66,-17,-33,-42,-26,-46,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-20,-98,191,-19,-27,]),'tk_assig':([17,51,53,57,88,94,127,133,209,],[52,84,87,-25,-24,134,52,-26,52,]),'tk_inc':([17,57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,209,],[54,-25,112,-99,-101,-102,-103,-104,-105,-106,-107,-109,112,-24,-41,112,112,112,-96,-97,112,112,112,-108,112,112,112,112,112,-42,-26,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-79,-100,112,112,112,112,54,]),'tk_dec':([17,57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,209,],[55,-25,113,-99,-101,-102,-103,-104,-105,-106,-107,-109,113,-24,-41,113,113,113,-96,-97,113,113,113,-108,113,113,113,113,113,-42,-26,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-79,-100,113,113,113,113,55,]),'tk_par_o':([17,19,26,34,35,36,37,38,52,56,58,62,64,65,66,68,75,77,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[56,62,64,78,79,80,81,82,64,64,64,64,64,64,64,118,56,120,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'tk_brackets_o':([17,18,29,30,31,32,33,53,57,59,60,75,88,95,96,119,133,176,193,],[58,61,-72,-73,-74,-75,-76,58,-25,61,-22,58,-24,-21,-23,58,-26,58,58,]),'tk_sub':([26,52,56,57,58,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,84,86,87,88,89,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,121,122,123,129,130,131,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,160,165,166,174,180,189,195,204,],[65,65,65,-25,65,65,99,65,65,65,-99,-101,-102,-103,-104,-105,-106,-107,-109,65,65,65,65,99,65,-24,-41,99,99,99,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-96,-97,99,-94,99,-108,99,99,99,99,99,-42,65,-26,-80,-81,-82,-83,-84,-85,99,99,99,99,99,99,99,99,-79,65,-100,65,65,-98,99,99,65,65,99,]),'tk_not':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'res_read':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'tk_int':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'tk_decimal':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'tk_string':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'tk_char':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'res_true':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'res_false':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'res_null':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'tk_par_c':([29,30,31,32,33,54,55,56,57,67,69,70,71,72,73,74,75,76,82,86,88,89,90,91,92,97,112,113,114,115,116,117,118,119,120,121,122,123,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,154,155,162,166,170,183,206,207,208,],[-72,-73,-74,-75,-76,-47,-48,89,-25,-99,-101,-102,-103,-104,-105,-106,-107,-109,128,-32,-24,-41,131,-44,-45,135,-96,-97,150,151,-94,-95,152,-108,153,157,158,159,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,168,-39,-43,-98,-40,-38,216,-67,-68,]),'tk_add':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,98,-99,-101,-102,-103,-104,-105,-106,-107,-109,98,-24,-41,98,98,98,-96,-97,98,-94,98,-108,98,98,98,98,98,-42,-26,-80,-81,-82,-83,-84,-85,98,98,98,98,98,98,98,98,-79,-100,-98,98,98,98,]),'tk_mult':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,100,-99,-101,-102,-103,-104,-105,-106,-107,-109,100,-24,-41,100,100,100,-96,-97,100,-94,100,-108,100,100,100,100,100,-42,-26,100,100,-82,-83,-84,-85,100,100,100,100,100,100,100,100,-79,-100,-98,100,100,100,]),'tk_div':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,101,-99,-101,-102,-103,-104,-105,-106,-107,-109,101,-24,-41,101,101,101,-96,-97,101,-94,101,-108,101,101,101,101,101,-42,-26,101,101,-82,-83,-84,-85,101,101,101,101,101,101,101,101,-79,-100,-98,101,101,101,]),'tk_module':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,102,-99,-101,-102,-103,-104,-105,-106,-107,-109,102,-24,-41,102,102,102,-96,-97,102,-94,102,-108,102,102,102,102,102,-42,-26,102,102,-82,-83,-84,-85,102,102,102,102,102,102,102,102,-79,-100,-98,102,102,102,]),'tk_pow':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,103,-99,-101,-102,-103,-104,-105,-106,-107,-109,103,-24,-41,103,103,103,-96,-97,103,-94,103,-108,103,103,103,103,103,-42,-26,103,103,103,103,103,-85,103,103,103,103,103,103,103,103,-79,-100,-98,103,103,103,]),'tk_equals':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,104,-99,-101,-102,-103,-104,-105,-106,-107,-109,104,-24,-41,104,104,104,-96,-97,104,-94,104,-108,104,104,104,104,104,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,104,104,-79,-100,-98,104,104,104,]),'tk_different':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,105,-99,-101,-102,-103,-104,-105,-106,-107,-109,105,-24,-41,105,105,105,-96,-97,105,-94,105,-108,105,105,105,105,105,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,105,105,-79,-100,-98,105,105,105,]),'tk_greater':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,106,-99,-101,-102,-103,-104,-105,-106,-107,-109,106,-24,-41,106,106,106,-96,-97,106,-94,106,-108,106,106,106,106,106,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,106,106,-79,-100,-98,106,106,106,]),'tk_greater_equals':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,107,-99,-101,-102,-103,-104,-105,-106,-107,-109,107,-24,-41,107,107,107,-96,-97,107,-94,107,-108,107,107,107,107,107,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,107,107,-79,-100,-98,107,107,107,]),'tk_less':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,108,-99,-101,-102,-103,-104,-105,-106,-107,-109,108,-24,-41,108,108,108,-96,-97,108,-94,108,-108,108,108,108,108,108,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,108,108,-79,-100,-98,108,108,108,]),'tk_less_equals':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,109,-99,-101,-102,-103,-104,-105,-106,-107,-109,109,-24,-41,109,109,109,-96,-97,109,-94,109,-108,109,109,109,109,109,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,109,109,-79,-100,-98,109,109,109,]),'tk_and':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,110,-99,-101,-102,-103,-104,-105,-106,-107,-109,110,-24,-41,110,110,110,-96,-97,110,-94,-95,-108,110,110,110,110,110,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,110,-79,-100,-98,110,110,110,]),'tk_or':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,174,180,204,],[-25,111,-99,-101,-102,-103,-104,-105,-106,-107,-109,111,-24,-41,111,111,111,-96,-97,111,-94,-95,-108,111,111,111,111,111,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-98,111,111,111,]),'tk_comma':([57,67,69,70,71,72,73,74,75,76,88,89,90,91,92,112,113,116,117,119,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,154,155,162,166,170,177,178,179,180,183,194,210,],[-25,-99,-101,-102,-103,-104,-105,-106,-107,-109,-24,-41,132,-44,-45,-96,-97,-94,-95,-108,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,169,-39,-43,-98,-40,195,-29,-30,-31,-38,-27,-28,]),'tk_brackets_c':([57,61,67,69,70,71,72,73,74,75,76,88,89,93,112,113,116,117,119,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,],[-25,96,-99,-101,-102,-103,-104,-105,-106,-107,-109,-24,-41,133,-96,-97,-94,-95,-108,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-98,]),'tk_twodot':([57,67,69,70,71,72,73,74,75,76,88,89,112,113,116,117,119,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,166,187,204,],[-25,-99,-101,-102,-103,-104,-105,-106,-107,-109,-24,-41,-96,-97,-94,-95,-108,-42,-26,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-79,-100,-98,203,215,]),'tk_key_o':([128,134,153,157,158,159,165,168,195,212,216,],[161,165,167,171,172,173,165,182,165,217,220,]),'res_new':([134,],[163,]),'res_else':([198,],[212,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instructions':([0,161,167,171,173,182,203,215,217,220,],[2,175,181,184,190,197,214,219,221,222,]),'instruction':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[3,39,3,3,3,3,39,39,3,39,39,39,3,39,3,3,39,3,39,39,]),'statement':([0,2,81,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[4,4,125,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,81,161,167,171,173,175,181,182,184,190,191,197,203,214,215,217,219,220,221,222,],[5,5,126,5,5,5,5,5,5,5,5,5,208,5,5,5,5,5,5,5,5,5,]),'statement_array':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment_array':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'print':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'inc_dec':([0,2,161,167,171,173,175,181,182,184,190,191,197,203,214,215,217,219,220,221,222,],[9,9,9,9,9,9,9,9,9,9,9,207,9,9,9,9,9,9,9,9,9,]),'conditional':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'loops':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'transfer':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'functions':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call_function':([0,2,26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,161,165,167,171,173,175,181,182,184,189,190,195,197,203,214,215,217,219,220,221,222,],[14,14,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,14,67,14,14,14,14,14,14,14,67,14,67,14,14,14,14,14,14,14,14,14,]),'type':([0,2,64,120,161,163,167,169,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[18,18,115,156,18,176,18,156,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'con_if':([0,2,161,167,171,173,175,181,182,184,190,197,203,212,214,215,217,219,220,221,222,],[20,20,20,20,20,20,20,20,20,20,20,20,20,218,20,20,20,20,20,20,20,]),'con_switch':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'loop_while':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'loop_for':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'function_main':([0,2,161,167,171,173,175,181,182,184,190,197,203,214,215,217,219,220,221,222,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ptcommaP':([4,5,6,7,8,9,12,14,],[40,43,44,45,46,47,48,49,]),'empty':([4,5,6,7,8,9,12,14,51,],[42,42,42,42,42,42,42,42,85,]),'list_expression':([17,75,176,],[53,119,193,]),'expression_bra':([17,53,75,119,176,193,],[57,88,57,88,57,88,]),'list_brackets':([18,],[59,]),'brackets':([18,59,],[60,95,]),'expression':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,165,189,195,],[63,86,92,93,97,114,116,117,121,122,123,129,130,136,137,138,139,140,141,142,143,144,145,146,147,148,149,92,166,174,180,204,180,]),'statementP':([51,],[83,]),'list_params_call':([56,],[90,]),'params_call':([56,132,],[91,162,]),'for_init':([81,],[124,]),'list_params':([120,],[154,]),'params':([120,169,],[155,183,]),'values_array':([134,165,195,],[164,179,179,]),'list_values_array':([165,],[177,]),'values':([165,195,],[178,210,]),'default':([172,186,],[185,201,]),'list_case':([172,],[186,]),'case':([172,186,],[188,202,]),'for_advance':([191,],[206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instructions','init',1,'p_init','grammar.py',237),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','grammar.py',243),
  ('instructions -> instruction','instructions',1,'p_instructions_instruction','grammar.py',249),
  ('instruction -> statement ptcommaP','instruction',2,'p_instruction','grammar.py',258),
  ('instruction -> assignment ptcommaP','instruction',2,'p_instruction','grammar.py',259),
  ('instruction -> statement_array ptcommaP','instruction',2,'p_instruction','grammar.py',260),
  ('instruction -> assignment_array ptcommaP','instruction',2,'p_instruction','grammar.py',261),
  ('instruction -> print ptcommaP','instruction',2,'p_instruction','grammar.py',262),
  ('instruction -> inc_dec ptcommaP','instruction',2,'p_instruction','grammar.py',263),
  ('instruction -> conditional','instruction',1,'p_instruction','grammar.py',264),
  ('instruction -> loops','instruction',1,'p_instruction','grammar.py',265),
  ('instruction -> transfer ptcommaP','instruction',2,'p_instruction','grammar.py',266),
  ('instruction -> functions','instruction',1,'p_instruction','grammar.py',267),
  ('instruction -> call_function ptcommaP','instruction',2,'p_instruction','grammar.py',268),
  ('instruction -> error tk_dotcomma','instruction',2,'p_instruction_error','grammar.py',272),
  ('statement -> res_var tk_id statementP','statement',3,'p_statement','grammar.py',281),
  ('statementP -> tk_assig expression','statementP',2,'p_statementP','grammar.py',289),
  ('statementP -> empty','statementP',1,'p_statementP','grammar.py',290),
  ('statement_array -> type list_brackets tk_id tk_assig res_new type list_expression','statement_array',7,'p_statement_array','grammar.py',300),
  ('statement_array -> type list_brackets tk_id tk_assig values_array','statement_array',5,'p_statement_array_keys','grammar.py',306),
  ('list_brackets -> list_brackets brackets','list_brackets',2,'p_statement_array_list_brackets','grammar.py',312),
  ('list_brackets -> brackets','list_brackets',1,'p_statement_array_list_brackets_brackets','grammar.py',317),
  ('brackets -> tk_brackets_o tk_brackets_c','brackets',2,'p_statement_array_brackets','grammar.py',321),
  ('list_expression -> list_expression expression_bra','list_expression',2,'p_statement_array_list_expression','grammar.py',325),
  ('list_expression -> expression_bra','list_expression',1,'p_statement_array_list_expression_expression','grammar.py',330),
  ('expression_bra -> tk_brackets_o expression tk_brackets_c','expression_bra',3,'p_statement_array_expression','grammar.py',334),
  ('values_array -> tk_key_o list_values_array tk_key_c','values_array',3,'p_values_array','grammar.py',339),
  ('list_values_array -> list_values_array tk_comma values','list_values_array',3,'p_list_values_array','grammar.py',344),
  ('list_values_array -> values','list_values_array',1,'p_list_values_array_value','grammar.py',349),
  ('values -> values_array','values',1,'p_value','grammar.py',354),
  ('values -> expression','values',1,'p_value','grammar.py',355),
  ('assignment -> tk_id tk_assig expression','assignment',3,'p_assignment','grammar.py',363),
  ('assignment_array -> tk_id list_expression tk_assig expression','assignment_array',4,'p_assignment_array','grammar.py',367),
  ('functions -> function_main','functions',1,'p_functions','grammar.py',375),
  ('function_main -> res_main tk_par_o tk_par_c tk_key_o instructions tk_key_c','function_main',6,'p_function_main','grammar.py',381),
  ('functions -> res_func tk_id tk_par_o tk_par_c tk_key_o instructions tk_key_c','functions',7,'p_function_whitout_params','grammar.py',388),
  ('functions -> res_func tk_id tk_par_o list_params tk_par_c tk_key_o instructions tk_key_c','functions',8,'p_function_whit_params','grammar.py',394),
  ('list_params -> list_params tk_comma params','list_params',3,'p_list_params_functions','grammar.py',402),
  ('list_params -> params','list_params',1,'p_list_params_params_funcion','grammar.py',410),
  ('params -> type tk_id','params',2,'p_params_of_function','grammar.py',415),
  ('call_function -> tk_id tk_par_o tk_par_c','call_function',3,'p_call_function_whitout_params','grammar.py',424),
  ('call_function -> tk_id tk_par_o list_params_call tk_par_c','call_function',4,'p_call_function_whit_params','grammar.py',429),
  ('list_params_call -> list_params_call tk_comma params_call','list_params_call',3,'p_list_params_call','grammar.py',437),
  ('list_params_call -> params_call','list_params_call',1,'p_list_params_call_param','grammar.py',442),
  ('params_call -> expression','params_call',1,'p_params_call','grammar.py',447),
  ('print -> res_print tk_par_o expression tk_par_c','print',4,'p_print','grammar.py',455),
  ('inc_dec -> tk_id tk_inc','inc_dec',2,'p_inc_dec','grammar.py',462),
  ('inc_dec -> tk_id tk_dec','inc_dec',2,'p_inc_dec','grammar.py',463),
  ('conditional -> con_if','conditional',1,'p_conditionals','grammar.py',474),
  ('conditional -> con_switch','conditional',1,'p_conditionals','grammar.py',475),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c','con_if',7,'p_conditional_if','grammar.py',479),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else tk_key_o instructions tk_key_c','con_if',11,'p_conditional_if_else','grammar.py',483),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else con_if','con_if',9,'p_conditional_if_else_if','grammar.py',487),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o default tk_key_c','con_switch',7,'p_conditional_switch_default','grammar.py',492),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o list_case tk_key_c','con_switch',7,'p_conditional_switch_case','grammar.py',496),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o list_case default tk_key_c','con_switch',8,'p_conditional_switch','grammar.py',500),
  ('list_case -> list_case case','list_case',2,'p_conditional_switch_list_case','grammar.py',504),
  ('list_case -> case','list_case',1,'p_conditional_case','grammar.py',512),
  ('case -> res_case expression tk_twodot instructions','case',4,'p_case','grammar.py',519),
  ('default -> res_default tk_twodot instructions','default',3,'p_default','grammar.py',525),
  ('loops -> loop_while','loops',1,'p_loops','grammar.py',532),
  ('loops -> loop_for','loops',1,'p_loops','grammar.py',533),
  ('loop_while -> res_while tk_par_o expression tk_par_c tk_key_o instructions tk_key_c','loop_while',7,'p_loops_while','grammar.py',539),
  ('loop_for -> res_for tk_par_o for_init tk_dotcomma expression tk_dotcomma for_advance tk_par_c tk_key_o instructions tk_key_c','loop_for',11,'p_loops_for','grammar.py',544),
  ('for_init -> statement','for_init',1,'p_loops_for_init','grammar.py',549),
  ('for_init -> assignment','for_init',1,'p_loops_for_init','grammar.py',550),
  ('for_advance -> inc_dec','for_advance',1,'p_loops_for_advance','grammar.py',555),
  ('for_advance -> assignment','for_advance',1,'p_loops_for_advance','grammar.py',556),
  ('transfer -> res_break','transfer',1,'p_transfer_break','grammar.py',564),
  ('transfer -> res_continue','transfer',1,'p_transfer_continue','grammar.py',569),
  ('transfer -> res_return expression','transfer',2,'p_transfer_return','grammar.py',574),
  ('type -> res_int','type',1,'p_type','grammar.py',582),
  ('type -> res_char','type',1,'p_type','grammar.py',583),
  ('type -> res_string','type',1,'p_type','grammar.py',584),
  ('type -> res_double','type',1,'p_type','grammar.py',585),
  ('type -> res_boolean','type',1,'p_type','grammar.py',586),
  ('ptcommaP -> tk_dotcomma','ptcommaP',1,'p_ptcommaP','grammar.py',605),
  ('ptcommaP -> empty','ptcommaP',1,'p_ptcommaP','grammar.py',606),
  ('expression -> tk_par_o expression tk_par_c','expression',3,'p_grouping_expression','grammar.py',613),
  ('expression -> expression tk_add expression','expression',3,'p_expression_binary','grammar.py',617),
  ('expression -> expression tk_sub expression','expression',3,'p_expression_binary','grammar.py',618),
  ('expression -> expression tk_mult expression','expression',3,'p_expression_binary','grammar.py',619),
  ('expression -> expression tk_div expression','expression',3,'p_expression_binary','grammar.py',620),
  ('expression -> expression tk_module expression','expression',3,'p_expression_binary','grammar.py',621),
  ('expression -> expression tk_pow expression','expression',3,'p_expression_binary','grammar.py',622),
  ('expression -> expression tk_equals expression','expression',3,'p_expression_binary','grammar.py',623),
  ('expression -> expression tk_different expression','expression',3,'p_expression_binary','grammar.py',624),
  ('expression -> expression tk_greater expression','expression',3,'p_expression_binary','grammar.py',625),
  ('expression -> expression tk_greater_equals expression','expression',3,'p_expression_binary','grammar.py',626),
  ('expression -> expression tk_less expression','expression',3,'p_expression_binary','grammar.py',627),
  ('expression -> expression tk_less_equals expression','expression',3,'p_expression_binary','grammar.py',628),
  ('expression -> expression tk_and expression','expression',3,'p_expression_binary','grammar.py',629),
  ('expression -> expression tk_or expression','expression',3,'p_expression_binary','grammar.py',630),
  ('expression -> tk_sub expression','expression',2,'p_expression_unary','grammar.py',663),
  ('expression -> tk_not expression','expression',2,'p_expression_unary','grammar.py',664),
  ('expression -> expression tk_inc','expression',2,'p_expression_unary_right','grammar.py',671),
  ('expression -> expression tk_dec','expression',2,'p_expression_unary_right','grammar.py',672),
  ('expression -> tk_par_o type tk_par_c expression','expression',4,'p_expression_unary_cast','grammar.py',680),
  ('expression -> call_function','expression',1,'p_expression_call_function','grammar.py',686),
  ('expression -> res_read tk_par_o tk_par_c','expression',3,'p_expression_read','grammar.py',690),
  ('expression -> tk_int','expression',1,'p_expression_primitive_int','grammar.py',696),
  ('expression -> tk_decimal','expression',1,'p_expression_primitive_float','grammar.py',701),
  ('expression -> tk_string','expression',1,'p_expression_primitive_string','grammar.py',705),
  ('expression -> tk_char','expression',1,'p_expression_primitive_char','grammar.py',709),
  ('expression -> res_true','expression',1,'p_epression_primitive_bool','grammar.py',713),
  ('expression -> res_false','expression',1,'p_epression_primitive_bool','grammar.py',714),
  ('expression -> tk_id','expression',1,'p_expression_primitive_id','grammar.py',718),
  ('expression -> tk_id list_expression','expression',2,'p_expression_primitive_array','grammar.py',722),
  ('expression -> res_null','expression',1,'p_expression_primitive_null','grammar.py',727),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',733),
]
