
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initlefttk_orlefttk_andrighttk_unotlefttk_equalstk_differenttk_greatertk_greater_equalstk_lesstk_less_equalslefttk_addtk_sublefttk_multtk_divtk_modulelefttk_powrighttk_uminusrighttk_fcastlefttk_inctk_decres_boolean res_break res_case res_char res_continue res_default res_double res_else res_false res_for res_func res_if res_int res_main res_new res_null res_print res_read res_return res_string res_switch res_true res_var res_while tk_add tk_and tk_assig tk_brackets_c tk_brackets_o tk_char tk_comma tk_dec tk_decimal tk_different tk_div tk_dotcomma tk_equals tk_greater tk_greater_equals tk_id tk_inc tk_int tk_key_c tk_key_o tk_less tk_less_equals tk_module tk_mult tk_not tk_or tk_par_c tk_par_o tk_pow tk_string tk_sub tk_twodotinit : instructionsinstructions : instructions instructioninstructions : instructioninstruction : statement ptcommaP\n                   | assignment ptcommaP \n                   | statement_array ptcommaP\n                   | assignment_array ptcommaP\n                   | print ptcommaP\n                   | inc_dec ptcommaP\n                   | conditional\n                   | loops\n                   | transfer ptcommaP\n                   | functions\n                   | call_function ptcommaPinstruction : error tk_dotcommastatement : res_var tk_id statementPstatementP : tk_assig expression\n                  | emptystatement_array : type list_brackets tk_id tk_assig res_new type list_expressionlist_brackets : list_brackets bracketslist_brackets : bracketsbrackets : tk_brackets_o tk_brackets_clist_expression : list_expression expression_bralist_expression : expression_braexpression_bra : tk_brackets_o expression tk_brackets_cassignment : tk_id tk_assig expressionassignment_array : tk_id list_expression tk_assig expressionfunctions : function_mainfunction_main : res_main tk_par_o tk_par_c tk_key_o instructions tk_key_cfunctions : res_func tk_id tk_par_o tk_par_c tk_key_o instructions tk_key_cfunctions : res_func tk_id tk_par_o list_params tk_par_c tk_key_o instructions tk_key_clist_params : list_params tk_comma paramslist_params : paramsparams : type tk_idcall_function : tk_id tk_par_o tk_par_ccall_function : tk_id tk_par_o list_params_call tk_par_clist_params_call : list_params_call tk_comma params_calllist_params_call : params_callparams_call : expressionprint : res_print tk_par_o expression tk_par_cinc_dec : tk_id tk_inc\n               | tk_id tk_decconditional : con_if\n                   | con_switchcon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_ccon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else tk_key_o instructions tk_key_ccon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else con_ifcon_switch : res_switch tk_par_o expression tk_par_c tk_key_o default tk_key_ccon_switch : res_switch tk_par_o expression tk_par_c tk_key_o list_case tk_key_ccon_switch : res_switch tk_par_o expression tk_par_c tk_key_o list_case default tk_key_clist_case : list_case caselist_case : casecase : res_case expression tk_twodot instructionsdefault : res_default tk_twodot instructionsloops : loop_while\n             | loop_forloop_while : res_while tk_par_o expression tk_par_c tk_key_o instructions tk_key_cloop_for : res_for tk_par_o for_init tk_dotcomma expression tk_dotcomma for_advance tk_par_c tk_key_o instructions tk_key_cfor_init : statement\n                | assignmentfor_advance : inc_dec\n                   | assignmenttransfer : res_breaktransfer : res_continuetransfer : res_return expressiontype : res_int\n            | res_char\n            | res_string\n            | res_double\n            | res_booleanptcommaP : tk_dotcomma\n                | emptyexpression : tk_par_o expression tk_par_cexpression : expression tk_add expression\n                  | expression tk_sub expression\n                  | expression tk_mult expression\n                  | expression tk_div expression\n                  | expression tk_module expression\n                  | expression tk_pow expression\n                  | expression tk_equals expression\n                  | expression tk_different expression\n                  | expression tk_greater expression\n                  | expression tk_greater_equals expression\n                  | expression tk_less expression\n                  | expression tk_less_equals expression\n                  | expression tk_and expression\n                  | expression tk_or expressionexpression : tk_sub expression %prec tk_uminus\n                  | tk_not expression %prec tk_unotexpression : expression tk_inc\n                  | expression tk_decexpression : tk_par_o type tk_par_c expression %prec tk_fcastexpression : call_functionexpression : res_read tk_par_o tk_par_c\n    expression :  tk_int\n    expression : tk_decimalexpression : tk_stringexpression : tk_charexpression : res_true\n                  | res_falseexpression : tk_idexpression : tk_id list_expressionexpression : res_nullempty : '
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[15,15,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,15,-92,15,15,15,15,15,15,15,15,-29,-19,-30,15,-45,-48,-49,15,-57,-31,-50,15,15,15,-47,15,15,15,15,-46,-58,]),'res_var':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,81,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[16,16,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,16,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,16,-92,16,16,16,16,16,16,16,16,-29,-19,-30,16,-45,-48,-49,16,-57,-31,-50,16,16,16,-47,16,16,16,16,-46,-58,]),'tk_id':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,81,83,84,85,86,87,88,89,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,119,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,160,161,164,165,169,171,173,175,176,178,183,184,185,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[17,17,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,51,-43,-44,-55,-56,-63,-64,75,-28,77,-66,-67,-68,-69,-70,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,75,-41,-42,75,-24,75,94,-21,75,-65,75,75,75,-93,-95,-96,-97,-98,-99,-100,-101,-103,75,75,75,127,-16,75,-18,-26,75,-23,-35,-20,-22,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-90,-91,-88,-89,-102,-17,-27,-36,75,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,75,-94,168,75,17,-92,17,17,17,17,17,17,17,75,17,201,-29,-19,-30,17,-45,-48,-49,17,-57,-31,-50,17,17,17,-47,17,17,17,17,-46,-58,]),'res_print':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[19,19,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,19,-92,19,19,19,19,19,19,19,19,-29,-19,-30,19,-45,-48,-49,19,-57,-31,-50,19,19,19,-47,19,19,19,19,-46,-58,]),'res_break':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[24,24,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,24,-92,24,24,24,24,24,24,24,24,-29,-19,-30,24,-45,-48,-49,24,-57,-31,-50,24,24,24,-47,24,24,24,24,-46,-58,]),'res_continue':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[25,25,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,25,-92,25,25,25,25,25,25,25,25,-29,-19,-30,25,-45,-48,-49,25,-57,-31,-50,25,25,25,-47,25,25,25,25,-46,-58,]),'res_return':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[26,26,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,26,-92,26,26,26,26,26,26,26,26,-29,-19,-30,26,-45,-48,-49,26,-57,-31,-50,26,26,26,-47,26,26,26,26,-46,-58,]),'res_func':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[28,28,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,28,-92,28,28,28,28,28,28,28,28,-29,-19,-30,28,-45,-48,-49,28,-57,-31,-50,28,28,28,-47,28,28,28,28,-46,-58,]),'res_int':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,165,167,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[29,29,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,29,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,29,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,29,29,-92,29,29,29,29,29,29,29,29,29,-29,-19,-30,29,-45,-48,-49,29,-57,-31,-50,29,29,29,-47,29,29,29,29,-46,-58,]),'res_char':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,165,167,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[30,30,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,30,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,30,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,30,30,-92,30,30,30,30,30,30,30,30,30,-29,-19,-30,30,-45,-48,-49,30,-57,-31,-50,30,30,30,-47,30,30,30,30,-46,-58,]),'res_string':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,165,167,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[31,31,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,31,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,31,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,31,31,-92,31,31,31,31,31,31,31,31,31,-29,-19,-30,31,-45,-48,-49,31,-57,-31,-50,31,31,31,-47,31,31,31,31,-46,-58,]),'res_double':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,165,167,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[32,32,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,32,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,32,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,32,32,-92,32,32,32,32,32,32,32,32,32,-29,-19,-30,32,-45,-48,-49,32,-57,-31,-50,32,32,32,-47,32,32,32,32,-46,-58,]),'res_boolean':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,64,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,120,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,163,164,165,167,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[33,33,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,33,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,33,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,33,33,-92,33,33,33,33,33,33,33,33,33,-29,-19,-30,33,-45,-48,-49,33,-57,-31,-50,33,33,33,-47,33,33,33,33,-46,-58,]),'res_if':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,203,204,205,206,208,209,210,211,212,213,214,215,],[34,34,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,34,-92,34,34,34,34,34,34,34,34,-29,-19,-30,34,-45,-48,-49,34,-57,-31,34,-50,34,34,34,-47,34,34,34,34,-46,-58,]),'res_switch':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[35,35,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,35,-92,35,35,35,35,35,35,35,35,-29,-19,-30,35,-45,-48,-49,35,-57,-31,-50,35,35,35,-47,35,35,35,35,-46,-58,]),'res_while':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[36,36,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,36,-92,36,36,36,36,36,36,36,36,-29,-19,-30,36,-45,-48,-49,36,-57,-31,-50,36,36,36,-47,36,36,36,36,-46,-58,]),'res_for':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[37,37,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,37,-92,37,37,37,37,37,37,37,37,-29,-19,-30,37,-45,-48,-49,37,-57,-31,-50,37,37,37,-47,37,37,37,37,-46,-58,]),'res_main':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,164,165,169,171,173,175,176,178,184,186,187,188,189,190,191,192,195,197,202,204,205,206,208,209,210,211,212,213,214,215,],[38,38,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,38,-92,38,38,38,38,38,38,38,38,-29,-19,-30,38,-45,-48,-49,38,-57,-31,-50,38,38,38,-47,38,38,38,38,-46,-58,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,186,187,188,190,191,192,197,202,204,209,214,215,],[0,-1,-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,-29,-19,-30,-45,-48,-49,-57,-31,-50,-47,-46,-58,]),'tk_key_c':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,173,175,178,179,180,182,184,186,187,188,189,190,191,192,193,194,197,202,204,205,209,210,212,213,214,215,],[-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,186,188,190,191,192,-52,197,-29,-19,-30,202,-45,-48,-49,204,-51,-57,-31,-50,-54,-47,-53,214,215,-46,-58,]),'res_default':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,170,180,182,186,187,188,190,191,192,194,197,202,204,209,210,214,215,],[-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,181,181,-52,-29,-19,-30,-45,-48,-49,-51,-57,-31,-50,-47,-53,-46,-58,]),'res_case':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,170,180,182,186,187,188,190,191,192,194,197,202,204,209,210,214,215,],[-3,-104,-104,-104,-104,-104,-104,-10,-11,-104,-13,-104,-43,-44,-55,-56,-63,-64,-28,-2,-4,-71,-72,-5,-6,-7,-8,-9,-12,-14,-15,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,183,183,-52,-29,-19,-30,-45,-48,-49,-51,-57,-31,-50,-47,-53,-46,-58,]),'tk_dotcomma':([4,5,6,7,8,9,12,14,15,24,25,51,54,55,57,63,67,69,70,71,72,73,74,75,76,83,85,86,88,89,112,113,116,117,119,124,125,126,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,187,],[41,41,41,41,41,41,41,41,50,-63,-64,-104,-41,-42,-24,-65,-93,-95,-96,-97,-98,-99,-100,-101,-103,-16,-18,-26,-23,-35,-90,-91,-88,-89,-102,160,-59,-60,-17,-27,-36,-25,-40,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,185,-19,]),'tk_assig':([17,51,53,57,88,94,127,133,201,],[52,84,87,-24,-23,134,52,-25,52,]),'tk_inc':([17,57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,201,],[54,-24,112,-93,-95,-96,-97,-98,-99,-100,-101,-103,112,-23,-35,112,112,112,-90,-91,112,112,112,-102,112,112,112,112,112,-36,-25,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-73,-94,112,112,112,54,]),'tk_dec':([17,57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,201,],[55,-24,113,-93,-95,-96,-97,-98,-99,-100,-101,-103,113,-23,-35,113,113,113,-90,-91,113,113,113,-102,113,113,113,113,113,-36,-25,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-73,-94,113,113,113,55,]),'tk_par_o':([17,19,26,34,35,36,37,38,52,56,58,62,64,65,66,68,75,77,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[56,62,64,78,79,80,81,82,64,64,64,64,64,64,64,118,56,120,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'tk_brackets_o':([17,18,29,30,31,32,33,53,57,59,60,75,88,95,96,119,133,174,187,],[58,61,-66,-67,-68,-69,-70,58,-24,61,-21,58,-23,-20,-22,58,-25,58,58,]),'tk_sub':([26,52,56,57,58,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,84,86,87,88,89,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,121,122,123,129,130,131,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,160,164,172,183,196,],[65,65,65,-24,65,65,99,65,65,65,-93,-95,-96,-97,-98,-99,-100,-101,-103,65,65,65,65,99,65,-23,-35,99,99,99,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-90,-91,99,-88,99,-102,99,99,99,99,99,-36,65,-25,-74,-75,-76,-77,-78,-79,99,99,99,99,99,99,99,99,-73,65,-94,65,-92,99,65,99,]),'tk_not':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'res_read':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'tk_int':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'tk_decimal':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'tk_string':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'tk_char':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'res_true':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'res_false':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'res_null':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'tk_par_c':([29,30,31,32,33,54,55,56,57,67,69,70,71,72,73,74,75,76,82,86,88,89,90,91,92,97,112,113,114,115,116,117,118,119,120,121,122,123,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,154,155,162,164,168,177,198,199,200,],[-66,-67,-68,-69,-70,-41,-42,89,-24,-93,-95,-96,-97,-98,-99,-100,-101,-103,128,-26,-23,-35,131,-38,-39,135,-90,-91,150,151,-88,-89,152,-102,153,157,158,159,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,166,-33,-37,-92,-34,-32,207,-61,-62,]),'tk_add':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,98,-93,-95,-96,-97,-98,-99,-100,-101,-103,98,-23,-35,98,98,98,-90,-91,98,-88,98,-102,98,98,98,98,98,-36,-25,-74,-75,-76,-77,-78,-79,98,98,98,98,98,98,98,98,-73,-94,-92,98,98,]),'tk_mult':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,100,-93,-95,-96,-97,-98,-99,-100,-101,-103,100,-23,-35,100,100,100,-90,-91,100,-88,100,-102,100,100,100,100,100,-36,-25,100,100,-76,-77,-78,-79,100,100,100,100,100,100,100,100,-73,-94,-92,100,100,]),'tk_div':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,101,-93,-95,-96,-97,-98,-99,-100,-101,-103,101,-23,-35,101,101,101,-90,-91,101,-88,101,-102,101,101,101,101,101,-36,-25,101,101,-76,-77,-78,-79,101,101,101,101,101,101,101,101,-73,-94,-92,101,101,]),'tk_module':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,102,-93,-95,-96,-97,-98,-99,-100,-101,-103,102,-23,-35,102,102,102,-90,-91,102,-88,102,-102,102,102,102,102,102,-36,-25,102,102,-76,-77,-78,-79,102,102,102,102,102,102,102,102,-73,-94,-92,102,102,]),'tk_pow':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,103,-93,-95,-96,-97,-98,-99,-100,-101,-103,103,-23,-35,103,103,103,-90,-91,103,-88,103,-102,103,103,103,103,103,-36,-25,103,103,103,103,103,-79,103,103,103,103,103,103,103,103,-73,-94,-92,103,103,]),'tk_equals':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,104,-93,-95,-96,-97,-98,-99,-100,-101,-103,104,-23,-35,104,104,104,-90,-91,104,-88,104,-102,104,104,104,104,104,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,104,104,-73,-94,-92,104,104,]),'tk_different':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,105,-93,-95,-96,-97,-98,-99,-100,-101,-103,105,-23,-35,105,105,105,-90,-91,105,-88,105,-102,105,105,105,105,105,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,105,105,-73,-94,-92,105,105,]),'tk_greater':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,106,-93,-95,-96,-97,-98,-99,-100,-101,-103,106,-23,-35,106,106,106,-90,-91,106,-88,106,-102,106,106,106,106,106,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,106,106,-73,-94,-92,106,106,]),'tk_greater_equals':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,107,-93,-95,-96,-97,-98,-99,-100,-101,-103,107,-23,-35,107,107,107,-90,-91,107,-88,107,-102,107,107,107,107,107,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,107,107,-73,-94,-92,107,107,]),'tk_less':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,108,-93,-95,-96,-97,-98,-99,-100,-101,-103,108,-23,-35,108,108,108,-90,-91,108,-88,108,-102,108,108,108,108,108,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,108,108,-73,-94,-92,108,108,]),'tk_less_equals':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,109,-93,-95,-96,-97,-98,-99,-100,-101,-103,109,-23,-35,109,109,109,-90,-91,109,-88,109,-102,109,109,109,109,109,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,109,109,-73,-94,-92,109,109,]),'tk_and':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,110,-93,-95,-96,-97,-98,-99,-100,-101,-103,110,-23,-35,110,110,110,-90,-91,110,-88,-89,-102,110,110,110,110,110,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,110,-73,-94,-92,110,110,]),'tk_or':([57,63,67,69,70,71,72,73,74,75,76,86,88,89,92,93,97,112,113,114,116,117,119,121,122,123,129,130,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,172,196,],[-24,111,-93,-95,-96,-97,-98,-99,-100,-101,-103,111,-23,-35,111,111,111,-90,-91,111,-88,-89,-102,111,111,111,111,111,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,111,111,]),'tk_comma':([57,67,69,70,71,72,73,74,75,76,88,89,90,91,92,112,113,116,117,119,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,154,155,162,164,168,177,],[-24,-93,-95,-96,-97,-98,-99,-100,-101,-103,-23,-35,132,-38,-39,-90,-91,-88,-89,-102,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,167,-33,-37,-92,-34,-32,]),'tk_brackets_c':([57,61,67,69,70,71,72,73,74,75,76,88,89,93,112,113,116,117,119,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,],[-24,96,-93,-95,-96,-97,-98,-99,-100,-101,-103,-23,-35,133,-90,-91,-88,-89,-102,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,]),'tk_twodot':([57,67,69,70,71,72,73,74,75,76,88,89,112,113,116,117,119,131,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,164,181,196,],[-24,-93,-95,-96,-97,-98,-99,-100,-101,-103,-23,-35,-90,-91,-88,-89,-102,-36,-25,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-73,-94,-92,195,206,]),'tk_key_o':([128,153,157,158,159,166,203,207,],[161,165,169,170,171,176,208,211,]),'res_new':([134,],[163,]),'res_else':([190,],[203,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instructions':([0,161,165,169,171,176,195,206,208,211,],[2,173,175,178,184,189,205,210,212,213,]),'instruction':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[3,39,3,3,3,3,39,39,3,39,39,39,3,39,3,3,39,3,39,39,]),'statement':([0,2,81,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[4,4,125,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,81,161,165,169,171,173,175,176,178,184,185,189,195,205,206,208,210,211,212,213,],[5,5,126,5,5,5,5,5,5,5,5,5,200,5,5,5,5,5,5,5,5,5,]),'statement_array':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment_array':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'print':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'inc_dec':([0,2,161,165,169,171,173,175,176,178,184,185,189,195,205,206,208,210,211,212,213,],[9,9,9,9,9,9,9,9,9,9,9,199,9,9,9,9,9,9,9,9,9,]),'conditional':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'loops':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'transfer':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'functions':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call_function':([0,2,26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,161,165,169,171,173,175,176,178,183,184,189,195,205,206,208,210,211,212,213,],[14,14,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,14,14,14,14,14,14,14,14,67,14,14,14,14,14,14,14,14,14,14,]),'type':([0,2,64,120,161,163,165,167,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[18,18,115,156,18,174,18,156,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'con_if':([0,2,161,165,169,171,173,175,176,178,184,189,195,203,205,206,208,210,211,212,213,],[20,20,20,20,20,20,20,20,20,20,20,20,20,209,20,20,20,20,20,20,20,]),'con_switch':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'loop_while':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'loop_for':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'function_main':([0,2,161,165,169,171,173,175,176,178,184,189,195,205,206,208,210,211,212,213,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ptcommaP':([4,5,6,7,8,9,12,14,],[40,43,44,45,46,47,48,49,]),'empty':([4,5,6,7,8,9,12,14,51,],[42,42,42,42,42,42,42,42,85,]),'list_expression':([17,75,174,],[53,119,187,]),'expression_bra':([17,53,75,119,174,187,],[57,88,57,88,57,88,]),'list_brackets':([18,],[59,]),'brackets':([18,59,],[60,95,]),'expression':([26,52,56,58,62,64,65,66,78,79,80,84,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,151,160,183,],[63,86,92,93,97,114,116,117,121,122,123,129,130,136,137,138,139,140,141,142,143,144,145,146,147,148,149,92,164,172,196,]),'statementP':([51,],[83,]),'list_params_call':([56,],[90,]),'params_call':([56,132,],[91,162,]),'for_init':([81,],[124,]),'list_params':([120,],[154,]),'params':([120,167,],[155,177,]),'default':([170,180,],[179,193,]),'list_case':([170,],[180,]),'case':([170,180,],[182,194,]),'for_advance':([185,],[198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instructions','init',1,'p_init','grammar.py',237),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','grammar.py',243),
  ('instructions -> instruction','instructions',1,'p_instructions_instruction','grammar.py',249),
  ('instruction -> statement ptcommaP','instruction',2,'p_instruction','grammar.py',258),
  ('instruction -> assignment ptcommaP','instruction',2,'p_instruction','grammar.py',259),
  ('instruction -> statement_array ptcommaP','instruction',2,'p_instruction','grammar.py',260),
  ('instruction -> assignment_array ptcommaP','instruction',2,'p_instruction','grammar.py',261),
  ('instruction -> print ptcommaP','instruction',2,'p_instruction','grammar.py',262),
  ('instruction -> inc_dec ptcommaP','instruction',2,'p_instruction','grammar.py',263),
  ('instruction -> conditional','instruction',1,'p_instruction','grammar.py',264),
  ('instruction -> loops','instruction',1,'p_instruction','grammar.py',265),
  ('instruction -> transfer ptcommaP','instruction',2,'p_instruction','grammar.py',266),
  ('instruction -> functions','instruction',1,'p_instruction','grammar.py',267),
  ('instruction -> call_function ptcommaP','instruction',2,'p_instruction','grammar.py',268),
  ('instruction -> error tk_dotcomma','instruction',2,'p_instruction_error','grammar.py',272),
  ('statement -> res_var tk_id statementP','statement',3,'p_statement','grammar.py',281),
  ('statementP -> tk_assig expression','statementP',2,'p_statementP','grammar.py',289),
  ('statementP -> empty','statementP',1,'p_statementP','grammar.py',290),
  ('statement_array -> type list_brackets tk_id tk_assig res_new type list_expression','statement_array',7,'p_statement_array','grammar.py',300),
  ('list_brackets -> list_brackets brackets','list_brackets',2,'p_statement_array_list_brackets','grammar.py',306),
  ('list_brackets -> brackets','list_brackets',1,'p_statement_array_list_brackets_brackets','grammar.py',311),
  ('brackets -> tk_brackets_o tk_brackets_c','brackets',2,'p_statement_array_brackets','grammar.py',315),
  ('list_expression -> list_expression expression_bra','list_expression',2,'p_statement_array_list_expression','grammar.py',319),
  ('list_expression -> expression_bra','list_expression',1,'p_statement_array_list_expression_expression','grammar.py',324),
  ('expression_bra -> tk_brackets_o expression tk_brackets_c','expression_bra',3,'p_statement_array_expression','grammar.py',328),
  ('assignment -> tk_id tk_assig expression','assignment',3,'p_assignment','grammar.py',335),
  ('assignment_array -> tk_id list_expression tk_assig expression','assignment_array',4,'p_assignment_array','grammar.py',339),
  ('functions -> function_main','functions',1,'p_functions','grammar.py',347),
  ('function_main -> res_main tk_par_o tk_par_c tk_key_o instructions tk_key_c','function_main',6,'p_function_main','grammar.py',353),
  ('functions -> res_func tk_id tk_par_o tk_par_c tk_key_o instructions tk_key_c','functions',7,'p_function_whitout_params','grammar.py',360),
  ('functions -> res_func tk_id tk_par_o list_params tk_par_c tk_key_o instructions tk_key_c','functions',8,'p_function_whit_params','grammar.py',366),
  ('list_params -> list_params tk_comma params','list_params',3,'p_list_params_functions','grammar.py',374),
  ('list_params -> params','list_params',1,'p_list_params_params_funcion','grammar.py',382),
  ('params -> type tk_id','params',2,'p_params_of_function','grammar.py',387),
  ('call_function -> tk_id tk_par_o tk_par_c','call_function',3,'p_call_function_whitout_params','grammar.py',396),
  ('call_function -> tk_id tk_par_o list_params_call tk_par_c','call_function',4,'p_call_function_whit_params','grammar.py',401),
  ('list_params_call -> list_params_call tk_comma params_call','list_params_call',3,'p_list_params_call','grammar.py',409),
  ('list_params_call -> params_call','list_params_call',1,'p_list_params_call_param','grammar.py',414),
  ('params_call -> expression','params_call',1,'p_params_call','grammar.py',419),
  ('print -> res_print tk_par_o expression tk_par_c','print',4,'p_print','grammar.py',427),
  ('inc_dec -> tk_id tk_inc','inc_dec',2,'p_inc_dec','grammar.py',434),
  ('inc_dec -> tk_id tk_dec','inc_dec',2,'p_inc_dec','grammar.py',435),
  ('conditional -> con_if','conditional',1,'p_conditionals','grammar.py',446),
  ('conditional -> con_switch','conditional',1,'p_conditionals','grammar.py',447),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c','con_if',7,'p_conditional_if','grammar.py',451),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else tk_key_o instructions tk_key_c','con_if',11,'p_conditional_if_else','grammar.py',455),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else con_if','con_if',9,'p_conditional_if_else_if','grammar.py',459),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o default tk_key_c','con_switch',7,'p_conditional_switch_default','grammar.py',464),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o list_case tk_key_c','con_switch',7,'p_conditional_switch_case','grammar.py',468),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o list_case default tk_key_c','con_switch',8,'p_conditional_switch','grammar.py',472),
  ('list_case -> list_case case','list_case',2,'p_conditional_switch_list_case','grammar.py',476),
  ('list_case -> case','list_case',1,'p_conditional_case','grammar.py',484),
  ('case -> res_case expression tk_twodot instructions','case',4,'p_case','grammar.py',491),
  ('default -> res_default tk_twodot instructions','default',3,'p_default','grammar.py',497),
  ('loops -> loop_while','loops',1,'p_loops','grammar.py',504),
  ('loops -> loop_for','loops',1,'p_loops','grammar.py',505),
  ('loop_while -> res_while tk_par_o expression tk_par_c tk_key_o instructions tk_key_c','loop_while',7,'p_loops_while','grammar.py',511),
  ('loop_for -> res_for tk_par_o for_init tk_dotcomma expression tk_dotcomma for_advance tk_par_c tk_key_o instructions tk_key_c','loop_for',11,'p_loops_for','grammar.py',516),
  ('for_init -> statement','for_init',1,'p_loops_for_init','grammar.py',521),
  ('for_init -> assignment','for_init',1,'p_loops_for_init','grammar.py',522),
  ('for_advance -> inc_dec','for_advance',1,'p_loops_for_advance','grammar.py',527),
  ('for_advance -> assignment','for_advance',1,'p_loops_for_advance','grammar.py',528),
  ('transfer -> res_break','transfer',1,'p_transfer_break','grammar.py',536),
  ('transfer -> res_continue','transfer',1,'p_transfer_continue','grammar.py',541),
  ('transfer -> res_return expression','transfer',2,'p_transfer_return','grammar.py',546),
  ('type -> res_int','type',1,'p_type','grammar.py',554),
  ('type -> res_char','type',1,'p_type','grammar.py',555),
  ('type -> res_string','type',1,'p_type','grammar.py',556),
  ('type -> res_double','type',1,'p_type','grammar.py',557),
  ('type -> res_boolean','type',1,'p_type','grammar.py',558),
  ('ptcommaP -> tk_dotcomma','ptcommaP',1,'p_ptcommaP','grammar.py',577),
  ('ptcommaP -> empty','ptcommaP',1,'p_ptcommaP','grammar.py',578),
  ('expression -> tk_par_o expression tk_par_c','expression',3,'p_grouping_expression','grammar.py',585),
  ('expression -> expression tk_add expression','expression',3,'p_expression_binary','grammar.py',589),
  ('expression -> expression tk_sub expression','expression',3,'p_expression_binary','grammar.py',590),
  ('expression -> expression tk_mult expression','expression',3,'p_expression_binary','grammar.py',591),
  ('expression -> expression tk_div expression','expression',3,'p_expression_binary','grammar.py',592),
  ('expression -> expression tk_module expression','expression',3,'p_expression_binary','grammar.py',593),
  ('expression -> expression tk_pow expression','expression',3,'p_expression_binary','grammar.py',594),
  ('expression -> expression tk_equals expression','expression',3,'p_expression_binary','grammar.py',595),
  ('expression -> expression tk_different expression','expression',3,'p_expression_binary','grammar.py',596),
  ('expression -> expression tk_greater expression','expression',3,'p_expression_binary','grammar.py',597),
  ('expression -> expression tk_greater_equals expression','expression',3,'p_expression_binary','grammar.py',598),
  ('expression -> expression tk_less expression','expression',3,'p_expression_binary','grammar.py',599),
  ('expression -> expression tk_less_equals expression','expression',3,'p_expression_binary','grammar.py',600),
  ('expression -> expression tk_and expression','expression',3,'p_expression_binary','grammar.py',601),
  ('expression -> expression tk_or expression','expression',3,'p_expression_binary','grammar.py',602),
  ('expression -> tk_sub expression','expression',2,'p_expression_unary','grammar.py',635),
  ('expression -> tk_not expression','expression',2,'p_expression_unary','grammar.py',636),
  ('expression -> expression tk_inc','expression',2,'p_expression_unary_right','grammar.py',643),
  ('expression -> expression tk_dec','expression',2,'p_expression_unary_right','grammar.py',644),
  ('expression -> tk_par_o type tk_par_c expression','expression',4,'p_expression_unary_cast','grammar.py',652),
  ('expression -> call_function','expression',1,'p_expression_call_function','grammar.py',658),
  ('expression -> res_read tk_par_o tk_par_c','expression',3,'p_expression_read','grammar.py',662),
  ('expression -> tk_int','expression',1,'p_expression_primitive_int','grammar.py',668),
  ('expression -> tk_decimal','expression',1,'p_expression_primitive_float','grammar.py',673),
  ('expression -> tk_string','expression',1,'p_expression_primitive_string','grammar.py',677),
  ('expression -> tk_char','expression',1,'p_expression_primitive_char','grammar.py',681),
  ('expression -> res_true','expression',1,'p_epression_primitive_bool','grammar.py',685),
  ('expression -> res_false','expression',1,'p_epression_primitive_bool','grammar.py',686),
  ('expression -> tk_id','expression',1,'p_expression_primitive_id','grammar.py',690),
  ('expression -> tk_id list_expression','expression',2,'p_expression_primitive_array','grammar.py',694),
  ('expression -> res_null','expression',1,'p_expression_primitive_null','grammar.py',699),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',705),
]
