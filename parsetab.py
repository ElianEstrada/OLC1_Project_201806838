
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initlefttk_orlefttk_andrighttk_unotlefttk_equalstk_differenttk_greatertk_greater_equalstk_lesstk_less_equalslefttk_addtk_sublefttk_multtk_divtk_modulelefttk_powrighttk_uminusrighttk_fcastlefttk_inctk_decres_boolean res_break res_case res_char res_continue res_default res_double res_else res_false res_for res_func res_if res_int res_main res_new res_null res_print res_read res_return res_string res_switch res_true res_var res_while tk_add tk_and tk_assig tk_brackets_c tk_brackets_o tk_char tk_comma tk_dec tk_decimal tk_different tk_div tk_dotcomma tk_equals tk_greater tk_greater_equals tk_id tk_inc tk_int tk_key_c tk_key_o tk_less tk_less_equals tk_module tk_mult tk_not tk_or tk_par_c tk_par_o tk_pow tk_string tk_sub tk_twodotinit : instructionsinstructions : instructions instructioninstructions : instructioninstruction : statement ptcommaP\n                   | assignment ptcommaP \n                   | statement_array ptcommaP\n                   | assignment_array ptcommaP\n                   | print ptcommaP\n                   | inc_dec ptcommaP\n                   | conditional\n                   | loops\n                   | transfer ptcommaP\n                   | functions\n                   | call_function ptcommaPinstruction : error tk_dotcommastatement : res_var tk_id statementPstatementP : tk_assig expression\n                  | emptystatement_array : type tk_brackets_o tk_brackets_c tk_id tk_assig res_new type tk_brackets_o expression tk_brackets_cassignment : tk_id tk_assig expressionassignment_array : tk_id tk_brackets_o expression tk_brackets_c tk_assig expressionfunctions : function_mainfunction_main : res_main tk_par_o tk_par_c tk_key_o instructions tk_key_cfunctions : res_func tk_id tk_par_o tk_par_c tk_key_o instructions tk_key_cfunctions : res_func tk_id tk_par_o list_params tk_par_c tk_key_o instructions tk_key_clist_params : list_params tk_comma paramslist_params : paramsparams : type tk_idcall_function : tk_id tk_par_o tk_par_ccall_function : tk_id tk_par_o list_params_call tk_par_clist_params_call : list_params_call tk_comma params_calllist_params_call : params_callparams_call : expressionprint : res_print tk_par_o expression tk_par_cinc_dec : tk_id tk_inc\n               | tk_id tk_decconditional : con_if\n                   | con_switchcon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_ccon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else tk_key_o instructions tk_key_ccon_if : res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else con_ifcon_switch : res_switch tk_par_o expression tk_par_c tk_key_o default tk_key_ccon_switch : res_switch tk_par_o expression tk_par_c tk_key_o list_case tk_key_ccon_switch : res_switch tk_par_o expression tk_par_c tk_key_o list_case default tk_key_clist_case : list_case caselist_case : casecase : res_case expression tk_twodot instructionsdefault : res_default tk_twodot instructionsloops : loop_while\n             | loop_forloop_while : res_while tk_par_o expression tk_par_c tk_key_o instructions tk_key_cloop_for : res_for tk_par_o for_init tk_dotcomma expression tk_dotcomma for_advance tk_par_c tk_key_o instructions tk_key_cfor_init : statement\n                | assignmentfor_advance : inc_dec\n                   | assignmenttransfer : res_breaktransfer : res_continuetransfer : res_return expressiontype : res_int\n            | res_char\n            | res_string\n            | res_double\n            | res_booleanptcommaP : tk_dotcomma\n                | emptyexpression : tk_par_o expression tk_par_cexpression : expression tk_add expression\n                  | expression tk_sub expression\n                  | expression tk_mult expression\n                  | expression tk_div expression\n                  | expression tk_module expression\n                  | expression tk_pow expression\n                  | expression tk_equals expression\n                  | expression tk_different expression\n                  | expression tk_greater expression\n                  | expression tk_greater_equals expression\n                  | expression tk_less expression\n                  | expression tk_less_equals expression\n                  | expression tk_and expression\n                  | expression tk_or expressionexpression : tk_sub expression %prec tk_uminus\n                  | tk_not expression %prec tk_unotexpression : expression tk_inc\n                  | expression tk_decexpression : tk_par_o type tk_par_c expression %prec tk_fcastexpression : call_functionexpression : res_read tk_par_o tk_par_c\n    expression :  tk_int\n    expression : tk_decimalexpression : tk_stringexpression : tk_charexpression : res_true\n                  | res_falseexpression : tk_idexpression : tk_id tk_brackets_o expression tk_brackets_cexpression : res_nullempty : '
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[15,15,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,15,-86,-96,15,15,15,15,-21,15,15,15,15,-23,-24,15,-39,-42,-43,15,-51,-25,-44,15,15,15,-41,15,15,-19,15,15,-40,-52,]),'res_var':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,77,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[16,16,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,16,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,16,-86,-96,16,16,16,16,-21,16,16,16,16,-23,-24,16,-39,-42,-43,16,-51,-25,-44,16,16,16,-41,16,16,-19,16,16,-40,-52,]),'tk_id':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,82,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,111,121,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,152,153,154,157,158,159,163,165,167,168,170,171,173,178,179,180,181,183,184,185,186,187,190,192,197,198,200,201,202,205,206,207,208,209,210,211,212,213,],[17,17,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,51,-37,-38,-49,-50,-57,-58,71,-22,73,-60,-61,-62,-63,-64,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,71,71,-35,-36,71,71,-59,71,71,71,-87,-89,-90,-91,-92,-93,-94,-95,-97,71,71,71,119,-16,71,-18,-20,-29,125,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-84,-85,-82,-83,71,-17,-30,71,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,71,-88,162,71,17,71,-86,-96,17,17,17,17,-21,17,17,17,71,17,196,-23,-24,17,-39,-42,-43,17,-51,71,-25,-44,17,17,17,-41,17,17,-19,17,17,-40,-52,]),'res_print':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[19,19,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,19,-86,-96,19,19,19,19,-21,19,19,19,19,-23,-24,19,-39,-42,-43,19,-51,-25,-44,19,19,19,-41,19,19,-19,19,19,-40,-52,]),'res_break':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[24,24,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,24,-86,-96,24,24,24,24,-21,24,24,24,24,-23,-24,24,-39,-42,-43,24,-51,-25,-44,24,24,24,-41,24,24,-19,24,24,-40,-52,]),'res_continue':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[25,25,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,25,-86,-96,25,25,25,25,-21,25,25,25,25,-23,-24,25,-39,-42,-43,25,-51,-25,-44,25,25,25,-41,25,25,-19,25,25,-40,-52,]),'res_return':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[26,26,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,26,-86,-96,26,26,26,26,-21,26,26,26,26,-23,-24,26,-39,-42,-43,26,-51,-25,-44,26,26,26,-41,26,26,-19,26,26,-40,-52,]),'res_func':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[28,28,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,28,-86,-96,28,28,28,28,-21,28,28,28,28,-23,-24,28,-39,-42,-43,28,-51,-25,-44,28,28,28,-41,28,28,-19,28,28,-40,-52,]),'res_int':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,60,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,112,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,161,163,165,167,168,169,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[29,29,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,29,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,29,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,29,-86,-96,29,29,29,29,29,-21,29,29,29,29,29,-23,-24,29,-39,-42,-43,29,-51,-25,-44,29,29,29,-41,29,29,-19,29,29,-40,-52,]),'res_char':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,60,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,112,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,161,163,165,167,168,169,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[30,30,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,30,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,30,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,30,-86,-96,30,30,30,30,30,-21,30,30,30,30,30,-23,-24,30,-39,-42,-43,30,-51,-25,-44,30,30,30,-41,30,30,-19,30,30,-40,-52,]),'res_string':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,60,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,112,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,161,163,165,167,168,169,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[31,31,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,31,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,31,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,31,-86,-96,31,31,31,31,31,-21,31,31,31,31,31,-23,-24,31,-39,-42,-43,31,-51,-25,-44,31,31,31,-41,31,31,-19,31,31,-40,-52,]),'res_double':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,60,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,112,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,161,163,165,167,168,169,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[32,32,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,32,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,32,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,32,-86,-96,32,32,32,32,32,-21,32,32,32,32,32,-23,-24,32,-39,-42,-43,32,-51,-25,-44,32,32,32,-41,32,32,-19,32,32,-40,-52,]),'res_boolean':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,60,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,112,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,161,163,165,167,168,169,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[33,33,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,33,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,33,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,33,-86,-96,33,33,33,33,33,-21,33,33,33,33,33,-23,-24,33,-39,-42,-43,33,-51,-25,-44,33,33,33,-41,33,33,-19,33,33,-40,-52,]),'res_if':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,199,200,201,202,205,206,207,208,209,210,211,212,213,],[34,34,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,34,-86,-96,34,34,34,34,-21,34,34,34,34,-23,-24,34,-39,-42,-43,34,-51,-25,34,-44,34,34,34,-41,34,34,-19,34,34,-40,-52,]),'res_switch':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[35,35,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,35,-86,-96,35,35,35,35,-21,35,35,35,35,-23,-24,35,-39,-42,-43,35,-51,-25,-44,35,35,35,-41,35,35,-19,35,35,-40,-52,]),'res_while':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[36,36,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,36,-86,-96,36,36,36,36,-21,36,36,36,36,-23,-24,36,-39,-42,-43,36,-51,-25,-44,36,36,36,-41,36,36,-19,36,36,-40,-52,]),'res_for':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[37,37,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,37,-86,-96,37,37,37,37,-21,37,37,37,37,-23,-24,37,-39,-42,-43,37,-51,-25,-44,37,37,37,-41,37,37,-19,37,37,-40,-52,]),'res_main':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,157,158,159,163,165,167,168,170,171,173,179,181,183,184,185,186,187,190,192,198,200,201,202,205,206,207,208,209,210,211,212,213,],[38,38,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,38,-86,-96,38,38,38,38,-21,38,38,38,38,-23,-24,38,-39,-42,-43,38,-51,-25,-44,38,38,38,-41,38,38,-19,38,38,-40,-52,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,157,158,168,181,183,185,186,187,192,198,200,206,209,212,213,],[0,-1,-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,-86,-96,-21,-23,-24,-39,-42,-43,-51,-25,-44,-41,-19,-40,-52,]),'tk_key_c':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,157,158,167,168,170,173,174,175,177,179,181,183,184,185,186,187,188,189,192,198,200,201,206,207,209,210,211,212,213,],[-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,-86,-96,181,-21,183,185,186,187,-46,192,-23,-24,198,-39,-42,-43,200,-45,-51,-25,-44,-48,-41,-47,-19,212,213,-40,-52,]),'res_default':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,157,158,164,168,175,177,181,183,185,186,187,189,192,198,200,206,207,209,212,213,],[-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,-86,-96,176,-21,176,-46,-23,-24,-39,-42,-43,-45,-51,-25,-44,-41,-47,-19,-40,-52,]),'res_case':([3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,157,158,164,168,175,177,181,183,185,186,187,189,192,198,200,206,207,209,212,213,],[-3,-98,-98,-98,-98,-98,-98,-10,-11,-98,-13,-98,-37,-38,-49,-50,-57,-58,-22,-2,-4,-65,-66,-5,-6,-7,-8,-9,-12,-14,-15,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,-86,-96,178,-21,178,-46,-23,-24,-39,-42,-43,-45,-51,-25,-44,-41,-47,-19,-40,-52,]),'tk_dotcomma':([4,5,6,7,8,9,12,14,15,24,25,51,54,55,59,63,65,66,67,68,69,70,71,72,79,81,82,84,104,105,108,109,116,117,118,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,157,158,166,168,209,],[41,41,41,41,41,41,41,41,50,-57,-58,-98,-35,-36,-59,-87,-89,-90,-91,-92,-93,-94,-95,-97,-16,-18,-20,-29,-84,-85,-82,-83,152,-53,-54,-17,-30,-34,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,-86,-96,180,-21,-19,]),'tk_assig':([17,51,119,122,125,196,],[52,80,52,154,156,52,]),'tk_brackets_o':([17,18,29,30,31,32,33,71,182,],[53,57,-60,-61,-62,-63,-64,111,197,]),'tk_inc':([17,59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,196,204,],[54,104,-87,-89,-90,-91,-92,-93,-94,-95,-97,104,104,-29,104,104,-84,-85,104,104,104,104,104,104,104,-30,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-67,-88,104,104,-96,104,104,104,54,104,]),'tk_dec':([17,59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,196,204,],[55,105,-87,-89,-90,-91,-92,-93,-94,-95,-97,105,105,-29,105,105,-84,-85,105,105,105,105,105,105,105,-30,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-67,-88,105,105,-96,105,105,105,55,105,]),'tk_par_o':([17,19,26,34,35,36,37,38,52,53,56,58,60,61,62,64,71,73,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[56,58,60,74,75,76,77,78,60,60,60,60,60,60,60,110,56,112,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'tk_sub':([26,52,53,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,80,82,83,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,111,113,114,115,121,123,124,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,152,154,157,158,166,168,178,191,197,204,],[61,61,61,61,61,91,61,61,61,-87,-89,-90,-91,-92,-93,-94,-95,-97,61,61,61,61,91,91,-29,91,91,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-84,-85,91,-82,91,61,91,91,91,91,-30,61,-68,-69,-70,-71,-72,-73,91,91,91,91,91,91,91,91,-67,61,-88,91,61,61,-86,-96,91,91,61,91,61,91,]),'tk_not':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'res_read':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'tk_int':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'tk_decimal':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'tk_string':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'tk_char':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'res_true':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'res_false':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'res_null':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'tk_par_c':([29,30,31,32,33,54,55,56,63,65,66,67,68,69,70,71,72,78,82,84,85,86,87,89,104,105,106,107,108,109,110,112,113,114,115,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,146,147,155,157,158,162,172,193,194,195,],[-60,-61,-62,-63,-64,-35,-36,84,-87,-89,-90,-91,-92,-93,-94,-95,-97,120,-20,-29,123,-32,-33,126,-84,-85,141,142,-82,-83,143,145,149,150,151,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,160,-27,-31,-86,-96,-28,-26,203,-55,-56,]),'tk_brackets_c':([57,63,65,66,67,68,69,70,71,72,83,84,104,105,108,109,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,204,],[88,-87,-89,-90,-91,-92,-93,-94,-95,-97,122,-29,-84,-85,-82,-83,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,158,-86,-96,209,]),'tk_add':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[90,-87,-89,-90,-91,-92,-93,-94,-95,-97,90,90,-29,90,90,-84,-85,90,-82,90,90,90,90,90,-30,-68,-69,-70,-71,-72,-73,90,90,90,90,90,90,90,90,-67,-88,90,-86,-96,90,90,90,90,]),'tk_mult':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[92,-87,-89,-90,-91,-92,-93,-94,-95,-97,92,92,-29,92,92,-84,-85,92,-82,92,92,92,92,92,-30,92,92,-70,-71,-72,-73,92,92,92,92,92,92,92,92,-67,-88,92,-86,-96,92,92,92,92,]),'tk_div':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[93,-87,-89,-90,-91,-92,-93,-94,-95,-97,93,93,-29,93,93,-84,-85,93,-82,93,93,93,93,93,-30,93,93,-70,-71,-72,-73,93,93,93,93,93,93,93,93,-67,-88,93,-86,-96,93,93,93,93,]),'tk_module':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[94,-87,-89,-90,-91,-92,-93,-94,-95,-97,94,94,-29,94,94,-84,-85,94,-82,94,94,94,94,94,-30,94,94,-70,-71,-72,-73,94,94,94,94,94,94,94,94,-67,-88,94,-86,-96,94,94,94,94,]),'tk_pow':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[95,-87,-89,-90,-91,-92,-93,-94,-95,-97,95,95,-29,95,95,-84,-85,95,-82,95,95,95,95,95,-30,95,95,95,95,95,-73,95,95,95,95,95,95,95,95,-67,-88,95,-86,-96,95,95,95,95,]),'tk_equals':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[96,-87,-89,-90,-91,-92,-93,-94,-95,-97,96,96,-29,96,96,-84,-85,96,-82,96,96,96,96,96,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,96,96,-67,-88,96,-86,-96,96,96,96,96,]),'tk_different':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[97,-87,-89,-90,-91,-92,-93,-94,-95,-97,97,97,-29,97,97,-84,-85,97,-82,97,97,97,97,97,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,97,97,-67,-88,97,-86,-96,97,97,97,97,]),'tk_greater':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[98,-87,-89,-90,-91,-92,-93,-94,-95,-97,98,98,-29,98,98,-84,-85,98,-82,98,98,98,98,98,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,98,98,-67,-88,98,-86,-96,98,98,98,98,]),'tk_greater_equals':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[99,-87,-89,-90,-91,-92,-93,-94,-95,-97,99,99,-29,99,99,-84,-85,99,-82,99,99,99,99,99,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,99,99,-67,-88,99,-86,-96,99,99,99,99,]),'tk_less':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[100,-87,-89,-90,-91,-92,-93,-94,-95,-97,100,100,-29,100,100,-84,-85,100,-82,100,100,100,100,100,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,100,100,-67,-88,100,-86,-96,100,100,100,100,]),'tk_less_equals':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[101,-87,-89,-90,-91,-92,-93,-94,-95,-97,101,101,-29,101,101,-84,-85,101,-82,101,101,101,101,101,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,101,101,-67,-88,101,-86,-96,101,101,101,101,]),'tk_and':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[102,-87,-89,-90,-91,-92,-93,-94,-95,-97,102,102,-29,102,102,-84,-85,102,-82,-83,102,102,102,102,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,102,-67,-88,102,-86,-96,102,102,102,102,]),'tk_or':([59,63,65,66,67,68,69,70,71,72,82,83,84,87,89,104,105,106,108,109,113,114,115,121,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,157,158,166,168,191,204,],[103,-87,-89,-90,-91,-92,-93,-94,-95,-97,103,103,-29,103,103,-84,-85,103,-82,-83,103,103,103,103,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,103,-86,-96,103,103,103,103,]),'tk_comma':([63,65,66,67,68,69,70,71,72,84,85,86,87,104,105,108,109,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,146,147,155,157,158,162,172,],[-87,-89,-90,-91,-92,-93,-94,-95,-97,-29,124,-32,-33,-84,-85,-82,-83,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,161,-27,-31,-86,-96,-28,-26,]),'tk_twodot':([63,65,66,67,68,69,70,71,72,84,104,105,108,109,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,157,158,176,191,],[-87,-89,-90,-91,-92,-93,-94,-95,-97,-29,-84,-85,-82,-83,-30,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-67,-88,-86,-96,190,202,]),'tk_key_o':([120,145,149,150,151,160,199,203,],[153,159,163,164,165,171,205,208,]),'res_new':([156,],[169,]),'res_else':([185,],[199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instructions':([0,153,159,163,165,171,190,202,205,208,],[2,167,170,173,179,184,201,207,210,211,]),'instruction':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[3,39,3,3,3,3,39,39,3,39,39,39,3,39,3,3,39,3,39,39,]),'statement':([0,2,77,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[4,4,117,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,77,153,159,163,165,167,170,171,173,179,180,184,190,201,202,205,207,208,210,211,],[5,5,118,5,5,5,5,5,5,5,5,5,195,5,5,5,5,5,5,5,5,5,]),'statement_array':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment_array':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'print':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'inc_dec':([0,2,153,159,163,165,167,170,171,173,179,180,184,190,201,202,205,207,208,210,211,],[9,9,9,9,9,9,9,9,9,9,9,194,9,9,9,9,9,9,9,9,9,]),'conditional':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'loops':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'transfer':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'functions':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call_function':([0,2,26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,153,154,159,163,165,167,170,171,173,178,179,184,190,197,201,202,205,207,208,210,211,],[14,14,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,14,63,14,14,14,14,14,14,14,63,14,14,14,63,14,14,14,14,14,14,14,]),'type':([0,2,60,112,153,159,161,163,165,167,169,170,171,173,179,184,190,201,202,205,207,208,210,211,],[18,18,107,148,18,18,148,18,18,18,182,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'con_if':([0,2,153,159,163,165,167,170,171,173,179,184,190,199,201,202,205,207,208,210,211,],[20,20,20,20,20,20,20,20,20,20,20,20,20,206,20,20,20,20,20,20,20,]),'con_switch':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'loop_while':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'loop_for':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'function_main':([0,2,153,159,163,165,167,170,171,173,179,184,190,201,202,205,207,208,210,211,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ptcommaP':([4,5,6,7,8,9,12,14,],[40,43,44,45,46,47,48,49,]),'empty':([4,5,6,7,8,9,12,14,51,],[42,42,42,42,42,42,42,42,81,]),'expression':([26,52,53,56,58,60,61,62,74,75,76,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,124,142,152,154,178,197,],[59,82,83,87,89,106,108,109,113,114,115,121,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,87,157,166,168,191,204,]),'statementP':([51,],[79,]),'list_params_call':([56,],[85,]),'params_call':([56,124,],[86,155,]),'for_init':([77,],[116,]),'list_params':([112,],[146,]),'params':([112,161,],[147,172,]),'default':([164,175,],[174,188,]),'list_case':([164,],[175,]),'case':([164,175,],[177,189,]),'for_advance':([180,],[193,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instructions','init',1,'p_init','grammar.py',237),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','grammar.py',243),
  ('instructions -> instruction','instructions',1,'p_instructions_instruction','grammar.py',249),
  ('instruction -> statement ptcommaP','instruction',2,'p_instruction','grammar.py',258),
  ('instruction -> assignment ptcommaP','instruction',2,'p_instruction','grammar.py',259),
  ('instruction -> statement_array ptcommaP','instruction',2,'p_instruction','grammar.py',260),
  ('instruction -> assignment_array ptcommaP','instruction',2,'p_instruction','grammar.py',261),
  ('instruction -> print ptcommaP','instruction',2,'p_instruction','grammar.py',262),
  ('instruction -> inc_dec ptcommaP','instruction',2,'p_instruction','grammar.py',263),
  ('instruction -> conditional','instruction',1,'p_instruction','grammar.py',264),
  ('instruction -> loops','instruction',1,'p_instruction','grammar.py',265),
  ('instruction -> transfer ptcommaP','instruction',2,'p_instruction','grammar.py',266),
  ('instruction -> functions','instruction',1,'p_instruction','grammar.py',267),
  ('instruction -> call_function ptcommaP','instruction',2,'p_instruction','grammar.py',268),
  ('instruction -> error tk_dotcomma','instruction',2,'p_instruction_error','grammar.py',272),
  ('statement -> res_var tk_id statementP','statement',3,'p_statement','grammar.py',281),
  ('statementP -> tk_assig expression','statementP',2,'p_statementP','grammar.py',289),
  ('statementP -> empty','statementP',1,'p_statementP','grammar.py',290),
  ('statement_array -> type tk_brackets_o tk_brackets_c tk_id tk_assig res_new type tk_brackets_o expression tk_brackets_c','statement_array',10,'p_statement_array','grammar.py',300),
  ('assignment -> tk_id tk_assig expression','assignment',3,'p_assignment','grammar.py',308),
  ('assignment_array -> tk_id tk_brackets_o expression tk_brackets_c tk_assig expression','assignment_array',6,'p_assignment_array','grammar.py',312),
  ('functions -> function_main','functions',1,'p_functions','grammar.py',320),
  ('function_main -> res_main tk_par_o tk_par_c tk_key_o instructions tk_key_c','function_main',6,'p_function_main','grammar.py',326),
  ('functions -> res_func tk_id tk_par_o tk_par_c tk_key_o instructions tk_key_c','functions',7,'p_function_whitout_params','grammar.py',333),
  ('functions -> res_func tk_id tk_par_o list_params tk_par_c tk_key_o instructions tk_key_c','functions',8,'p_function_whit_params','grammar.py',339),
  ('list_params -> list_params tk_comma params','list_params',3,'p_list_params_functions','grammar.py',347),
  ('list_params -> params','list_params',1,'p_list_params_params_funcion','grammar.py',355),
  ('params -> type tk_id','params',2,'p_params_of_function','grammar.py',360),
  ('call_function -> tk_id tk_par_o tk_par_c','call_function',3,'p_call_function_whitout_params','grammar.py',369),
  ('call_function -> tk_id tk_par_o list_params_call tk_par_c','call_function',4,'p_call_function_whit_params','grammar.py',374),
  ('list_params_call -> list_params_call tk_comma params_call','list_params_call',3,'p_list_params_call','grammar.py',382),
  ('list_params_call -> params_call','list_params_call',1,'p_list_params_call_param','grammar.py',387),
  ('params_call -> expression','params_call',1,'p_params_call','grammar.py',392),
  ('print -> res_print tk_par_o expression tk_par_c','print',4,'p_print','grammar.py',400),
  ('inc_dec -> tk_id tk_inc','inc_dec',2,'p_inc_dec','grammar.py',407),
  ('inc_dec -> tk_id tk_dec','inc_dec',2,'p_inc_dec','grammar.py',408),
  ('conditional -> con_if','conditional',1,'p_conditionals','grammar.py',419),
  ('conditional -> con_switch','conditional',1,'p_conditionals','grammar.py',420),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c','con_if',7,'p_conditional_if','grammar.py',424),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else tk_key_o instructions tk_key_c','con_if',11,'p_conditional_if_else','grammar.py',428),
  ('con_if -> res_if tk_par_o expression tk_par_c tk_key_o instructions tk_key_c res_else con_if','con_if',9,'p_conditional_if_else_if','grammar.py',432),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o default tk_key_c','con_switch',7,'p_conditional_switch_default','grammar.py',437),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o list_case tk_key_c','con_switch',7,'p_conditional_switch_case','grammar.py',441),
  ('con_switch -> res_switch tk_par_o expression tk_par_c tk_key_o list_case default tk_key_c','con_switch',8,'p_conditional_switch','grammar.py',445),
  ('list_case -> list_case case','list_case',2,'p_conditional_switch_list_case','grammar.py',449),
  ('list_case -> case','list_case',1,'p_conditional_case','grammar.py',457),
  ('case -> res_case expression tk_twodot instructions','case',4,'p_case','grammar.py',464),
  ('default -> res_default tk_twodot instructions','default',3,'p_default','grammar.py',470),
  ('loops -> loop_while','loops',1,'p_loops','grammar.py',477),
  ('loops -> loop_for','loops',1,'p_loops','grammar.py',478),
  ('loop_while -> res_while tk_par_o expression tk_par_c tk_key_o instructions tk_key_c','loop_while',7,'p_loops_while','grammar.py',484),
  ('loop_for -> res_for tk_par_o for_init tk_dotcomma expression tk_dotcomma for_advance tk_par_c tk_key_o instructions tk_key_c','loop_for',11,'p_loops_for','grammar.py',489),
  ('for_init -> statement','for_init',1,'p_loops_for_init','grammar.py',494),
  ('for_init -> assignment','for_init',1,'p_loops_for_init','grammar.py',495),
  ('for_advance -> inc_dec','for_advance',1,'p_loops_for_advance','grammar.py',500),
  ('for_advance -> assignment','for_advance',1,'p_loops_for_advance','grammar.py',501),
  ('transfer -> res_break','transfer',1,'p_transfer_break','grammar.py',509),
  ('transfer -> res_continue','transfer',1,'p_transfer_continue','grammar.py',514),
  ('transfer -> res_return expression','transfer',2,'p_transfer_return','grammar.py',519),
  ('type -> res_int','type',1,'p_type','grammar.py',527),
  ('type -> res_char','type',1,'p_type','grammar.py',528),
  ('type -> res_string','type',1,'p_type','grammar.py',529),
  ('type -> res_double','type',1,'p_type','grammar.py',530),
  ('type -> res_boolean','type',1,'p_type','grammar.py',531),
  ('ptcommaP -> tk_dotcomma','ptcommaP',1,'p_ptcommaP','grammar.py',550),
  ('ptcommaP -> empty','ptcommaP',1,'p_ptcommaP','grammar.py',551),
  ('expression -> tk_par_o expression tk_par_c','expression',3,'p_grouping_expression','grammar.py',558),
  ('expression -> expression tk_add expression','expression',3,'p_expression_binary','grammar.py',562),
  ('expression -> expression tk_sub expression','expression',3,'p_expression_binary','grammar.py',563),
  ('expression -> expression tk_mult expression','expression',3,'p_expression_binary','grammar.py',564),
  ('expression -> expression tk_div expression','expression',3,'p_expression_binary','grammar.py',565),
  ('expression -> expression tk_module expression','expression',3,'p_expression_binary','grammar.py',566),
  ('expression -> expression tk_pow expression','expression',3,'p_expression_binary','grammar.py',567),
  ('expression -> expression tk_equals expression','expression',3,'p_expression_binary','grammar.py',568),
  ('expression -> expression tk_different expression','expression',3,'p_expression_binary','grammar.py',569),
  ('expression -> expression tk_greater expression','expression',3,'p_expression_binary','grammar.py',570),
  ('expression -> expression tk_greater_equals expression','expression',3,'p_expression_binary','grammar.py',571),
  ('expression -> expression tk_less expression','expression',3,'p_expression_binary','grammar.py',572),
  ('expression -> expression tk_less_equals expression','expression',3,'p_expression_binary','grammar.py',573),
  ('expression -> expression tk_and expression','expression',3,'p_expression_binary','grammar.py',574),
  ('expression -> expression tk_or expression','expression',3,'p_expression_binary','grammar.py',575),
  ('expression -> tk_sub expression','expression',2,'p_expression_unary','grammar.py',608),
  ('expression -> tk_not expression','expression',2,'p_expression_unary','grammar.py',609),
  ('expression -> expression tk_inc','expression',2,'p_expression_unary_right','grammar.py',616),
  ('expression -> expression tk_dec','expression',2,'p_expression_unary_right','grammar.py',617),
  ('expression -> tk_par_o type tk_par_c expression','expression',4,'p_expression_unary_cast','grammar.py',625),
  ('expression -> call_function','expression',1,'p_expression_call_function','grammar.py',631),
  ('expression -> res_read tk_par_o tk_par_c','expression',3,'p_expression_read','grammar.py',635),
  ('expression -> tk_int','expression',1,'p_expression_primitive_int','grammar.py',641),
  ('expression -> tk_decimal','expression',1,'p_expression_primitive_float','grammar.py',646),
  ('expression -> tk_string','expression',1,'p_expression_primitive_string','grammar.py',650),
  ('expression -> tk_char','expression',1,'p_expression_primitive_char','grammar.py',654),
  ('expression -> res_true','expression',1,'p_epression_primitive_bool','grammar.py',658),
  ('expression -> res_false','expression',1,'p_epression_primitive_bool','grammar.py',659),
  ('expression -> tk_id','expression',1,'p_expression_primitive_id','grammar.py',663),
  ('expression -> tk_id tk_brackets_o expression tk_brackets_c','expression',4,'p_expression_primitive_array','grammar.py',667),
  ('expression -> res_null','expression',1,'p_expression_primitive_null','grammar.py',672),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',678),
]
